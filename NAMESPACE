import(methods)

#Generated by codetoolsBioC version 0.0.20
#Timestamp: Fri Jan 25 10:06:12 2013

#Imports: AnnotationDbi, Biobase, BiocGenerics, biomaRt, Biostrings,
#         biovizBase, BSgenome, GenomicFeatures, GenomicRanges,
#         graphics, grDevices, grid, IRanges, lattice, methods,
#         RColorBrewer, Rsamtools, rtracklayer, stats, utils

importClassesFrom(Biostrings, DNAString, DNAStringSet)

importClassesFrom(GenomicFeatures, TranscriptDb)

importClassesFrom(GenomicRanges, GRanges, GRangesList)

importClassesFrom(IRanges, IRanges, Rle)

#importClassesFrom(methods, ANY, character, data.frame, environment,
#                  "function", list, logical, matrix, missing, "NULL",
#                  numeric)

importClassesFrom(rtracklayer, UCSCData) 


importMethodsFrom(AnnotationDbi, colnames, get, ls, mget, tail)

importMethodsFrom(Biobase, rowMedians)

importMethodsFrom(BiocGenerics, cbind, duplicated, eval, intersect,
                  lapply, mapply, order, paste, pmax, pmin, rbind,
                  sapply, setdiff, table, tapply, unique)

importMethodsFrom(Biostrings, complement, "subseq<-", union, unmasked)

importMethodsFrom(BSgenome, organism, provider, providerVersion,
                  releaseDate, releaseName)

importMethodsFrom(GenomicFeatures, cdsBy, exonsBy,
                  fiveUTRsByTranscript, isActiveSeq, "isActiveSeq<-",
                  threeUTRsByTranscript, transcripts, transcriptsBy)

importMethodsFrom(GenomicRanges, "elementMetadata<-", genome,
                  "genome<-", mcols, "mcols<-", renameSeqlevels,
                  seqinfo, seqlengths, seqlevels, seqnames, strand,
                  "strand<-", subsetByOverlaps)

importMethodsFrom(IRanges, "%in%", as.data.frame, as.list, as.matrix,
                  as.vector, "colnames<-", coverage, diff,
                  disjointBins, elementLengths, elementMetadata, end,
                  "end<-", endoapply, findOverlaps, findRun, gsub,
                  ifelse, levels, match, mean, ncol, nrow, queryHits,
                  ranges, "ranges<-", reduce, rev, Rle, rownames,
                  "rownames<-", runLength, runmean, runValue,
                  "runValue<-", score, sort, split, start, "start<-",
                  sub, subjectHits, subseq, substring, t, tolower,
                  toupper, unlist, values, "values<-", which,
                  which.max, width, "width<-")

#importMethodsFrom(methods, coerce, initialize, show)

importMethodsFrom(Rsamtools, scanBam, scanBamHeader, ScanBamParam,
                  scanFa, scanFaIndex)

importMethodsFrom(rtracklayer, chrom, close, getTable, import,
                  import.bed, import.bedGraph, import.bw, import.gff,
                  import.gff1, import.gff2, import.gff3, import.wig,
                  "tableName<-", ucscTableQuery, browserSession)

importFrom(Biobase, listLen, rowMax, rowMin)

importFrom(BiocGenerics, getObjectSlots)

importFrom(biomaRt, getBM, useMart)

importFrom(Biostrings, DNAString, DNAStringSet, readDNAStringSet)

importFrom(biovizBase, getBioColor)

importFrom(GenomicRanges, GRanges)

importFrom(graphics, par)

importFrom(grDevices, boxplot.stats, col2rgb, colorRampPalette,
           extendrange, hsv, rgb2hsv)

importFrom(grid, convertHeight, convertUnit, convertWidth, convertX,
           convertY, current.transform, current.viewport,
           current.vpTree, dataViewport, downViewport, gpar,
           grid.circle, grid.lines, grid.newpage, grid.points,
           grid.polygon, grid.rect, grid.segments, grid.text,
           grid.yaxis, popViewport, pushViewport, stringHeight,
           stringWidth, unit, upViewport, viewport)

importFrom(IRanges, DataFrame, IRanges)

importFrom(lattice, current.panel.limits, panel.abline, panel.grid,
           panel.points, panel.polygon, panel.segments, panel.xyplot,
           trellis.par.get)

#importFrom(methods, .hasSlot, as, callNextMethod, getClass,
#           getClassDef, is, new, selectMethod, "slot<-", slotNames,
#           validObject)

importFrom(RColorBrewer, brewer.pal)

importFrom(Rsamtools, scanBamFlag)

importFrom(rtracklayer, BigWigFile, FastaFile, GenomicData, TwoBitFile,
            ucscGenomes)

importFrom(stats, loess.smooth, setNames)

importFrom(utils, assignInNamespace, browseURL, head, type.convert,
           write.table)

importFrom(Biostrings, DNA_ALPHABET)
###

export(".chrName",
       ".doCache",
       "AlignedReadTrack",
       "AnnotationTrack",
       "DetailsAnnotationTrack",
       "BiomartGeneRegionTrack",
       "DataTrack",
       "DisplayPars",
       "drawGD",
       "GeneRegionTrack",
       "GenomeAxisTrack",
       "IdeogramTrack",
       "UcscTrack",
       "as.list",
       "availableDefaultMapping",
       "availableDisplayPars",
       "clearSessionCache",
       "exportTracks",
       "plotTracks",
       "SequenceTrack")

exportClasses("AlignedReadTrack",
              "AnnotationTrack",
              "DetailsAnnotationTrack",
              "BiomartGeneRegionTrack",
              "DataTrack",
              "DisplayPars",
              "GeneRegionTrack",
              "GenomeAxisTrack",
              "IdeogramTrack",
              "ImageMap",
              "SequenceTrack")

exportMethods("[",
              "as.list",
              "chromosome",
              "chromosome<-",
              "coerce",
              "coords",
              "coverage",
              "displayPars",
              "displayPars<-",
              "elementMetadata<-",
              "end",
              "end<-",
              "exon",
              "exon<-",
              "feature",
              "feature<-",
              "gene",
              "gene<-",
              "genome",
              "genome<-",
              "getPar",
              "group",
              "group<-",
              "head",
              "identifier",
              "identifier<-",
              "imageMap",
              "initialize",
              "length",
              "max",
              "min",
              "names",
              "names<-",
              "position",
              "range",
              "ranges",
              "score",
              "seqnames",
              "seqlevels",
              "seqinfo",
              "setPar",
              "split",
              "stacking",
              "stacking<-",
              "stacks",
              "start",
              "start<-",
              "strand",
              "strand<-",
              "subseq",
              "subset",
              "symbol",
              "symbol<-",
              "tags",
              "tail",
              "transcript",
              "transcript<-",
              "values",
              "values<-",
              "width",
              "width<-")
